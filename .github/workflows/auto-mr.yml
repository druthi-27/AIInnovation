name: Auto PR Creation and Jira Status Update

on:
  push:
    branches:
      - '**'
      - '!main'
  pull_request:
    types: [opened, closed]

jobs:
  auto-create-pr:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract Jira Ticket ID and Title from Branch Name
        id: extract_jira
        run: |
          BRANCH_NAME="${GITHUB_REF##*/}"
          if [[ "$BRANCH_NAME" =~ ([A-Z]+-[0-9]+)-(.*) ]]; then
            JIRA_ID="${BASH_REMATCH[1]}"
            JIRA_TITLE="${BASH_REMATCH[2]//-/ }"
          else
            JIRA_ID="NO-JIRA"
            JIRA_TITLE="$BRANCH_NAME"
          fi
          echo "jira_id=$JIRA_ID" >> $GITHUB_OUTPUT
          echo "jira_title=$JIRA_TITLE" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: ${{ github.ref_name }}
          destination_branch: main
          pr_title: "${{ steps.extract_jira.outputs.jira_id }}: ${{ steps.extract_jira.outputs.jira_title }}"
          pr_body: |
            This pull request was created automatically by a GitHub Action when code was pushed to the branch `${{ github.ref_name }}`.
          pr_assignee: ${{ github.actor }}
          pr_label: "auto-pr"

  update-jira-status:
    needs: auto-create-pr
    runs-on: ubuntu-latest
    steps:
      - name: Extract Jira Ticket ID from Branch Name
        id: extract_jira
        run: |
          BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF##*/}}"
          if [[ "$BRANCH_NAME" =~ ([A-Z]+-[0-9]+) ]]; then
            JIRA_ID="${BASH_REMATCH[1]}"
          else
            JIRA_ID=""
          fi
          echo "jira_id=$JIRA_ID" >> $GITHUB_OUTPUT

      - name: Update Jira Status
        if: steps.extract_jira.outputs.jira_id != ''
        env:
          JIRA_ID: ${{ steps.extract_jira.outputs.jira_id }}
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          PR_ACTION: ${{ github.event.action }}
        run: |
          if [ "$PR_ACTION" = "closed" ] && [ "${{ github.event.pull_request.merged }}" = "true" ]; then
            TRANSITION_NAME="Testing"
          elif [ "$PR_ACTION" = "opened" ]; then
            TRANSITION_NAME="In Review"
          else
            exit 0
          fi

          # Get transition ID for the desired status
          TRANSITIONS=$(curl -s -u "$JIRA_EMAIL:$JIRA_API_TOKEN" -X GET \
            -H "Accept: application/json" \
            "$JIRA_BASE_URL/rest/api/3/issue/$JIRA_ID/transitions")
          TRANSITION_ID=$(echo "$TRANSITIONS" | jq -r --arg NAME "$TRANSITION_NAME" '.transitions[] | select(.name==$NAME) | .id')

          if [ -z "$TRANSITION_ID" ]; then
            echo "Transition '$TRANSITION_NAME' not found for $JIRA_ID"
            exit 1
          fi

          # Perform the transition
          curl -s -u "$JIRA_EMAIL:$JIRA_API_TOKEN" -X POST \
            -H "Accept: application/json" -H "Content-Type: application/json" \
            --data "{\"transition\":{\"id\":\"$TRANSITION_ID\"}}" \
            "$JIRA_BASE_URL/rest/api/3/issue/$JIRA_ID/transitions"